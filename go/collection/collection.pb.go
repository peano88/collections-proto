// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collection.proto

package collection

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	item "github.com/peano88/collections-proto/go/item"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Collection struct {
	// collection ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// the name of a collection
	Name  string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Items []*item.Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	// creation timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	// last updated timestamp
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{0}
}

func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (m *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(m, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Collection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Collection) GetItems() []*item.Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Collection) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Collection) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type ListCollectionsRequest struct {
	// The parent resource name, for example, "shelves/shelf1"
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCollectionsRequest) Reset()         { *m = ListCollectionsRequest{} }
func (m *ListCollectionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCollectionsRequest) ProtoMessage()    {}
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{1}
}

func (m *ListCollectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionsRequest.Unmarshal(m, b)
}
func (m *ListCollectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionsRequest.Marshal(b, m, deterministic)
}
func (m *ListCollectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionsRequest.Merge(m, src)
}
func (m *ListCollectionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCollectionsRequest.Size(m)
}
func (m *ListCollectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionsRequest proto.InternalMessageInfo

func (m *ListCollectionsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListCollectionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCollectionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListCollectionsResponse struct {
	// The field name should match the noun "Collection" in the method name.
	// There will be a maximum number of items returned based on the page_size field in the request.
	Collections []*Collection `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListCollectionsResponse) Reset()         { *m = ListCollectionsResponse{} }
func (m *ListCollectionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListCollectionsResponse) ProtoMessage()    {}
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{2}
}

func (m *ListCollectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCollectionsResponse.Unmarshal(m, b)
}
func (m *ListCollectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCollectionsResponse.Marshal(b, m, deterministic)
}
func (m *ListCollectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCollectionsResponse.Merge(m, src)
}
func (m *ListCollectionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListCollectionsResponse.Size(m)
}
func (m *ListCollectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCollectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCollectionsResponse proto.InternalMessageInfo

func (m *ListCollectionsResponse) GetCollections() []*Collection {
	if m != nil {
		return m.Collections
	}
	return nil
}

func (m *ListCollectionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetCollectionRequest struct {
	// The field will contain name of the resource requested.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionRequest) Reset()         { *m = GetCollectionRequest{} }
func (m *GetCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionRequest) ProtoMessage()    {}
func (*GetCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{3}
}

func (m *GetCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCollectionRequest.Unmarshal(m, b)
}
func (m *GetCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCollectionRequest.Marshal(b, m, deterministic)
}
func (m *GetCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionRequest.Merge(m, src)
}
func (m *GetCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_GetCollectionRequest.Size(m)
}
func (m *GetCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionRequest proto.InternalMessageInfo

func (m *GetCollectionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateCollectionRequest struct {
	// The Collection resource to create.
	// The field name should match the Noun in the method name.
	Collection           *Collection `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateCollectionRequest) Reset()         { *m = CreateCollectionRequest{} }
func (m *CreateCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCollectionRequest) ProtoMessage()    {}
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{4}
}

func (m *CreateCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCollectionRequest.Unmarshal(m, b)
}
func (m *CreateCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCollectionRequest.Marshal(b, m, deterministic)
}
func (m *CreateCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCollectionRequest.Merge(m, src)
}
func (m *CreateCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCollectionRequest.Size(m)
}
func (m *CreateCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCollectionRequest proto.InternalMessageInfo

func (m *CreateCollectionRequest) GetCollection() *Collection {
	if m != nil {
		return m.Collection
	}
	return nil
}

type UpdateCollectionRequest struct {
	// The Collection resource which replaces the resource on the server.
	Collection           *Collection           `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	FieldMask            *field_mask.FieldMask `protobuf:"bytes,2,opt,name=fieldMask,proto3" json:"fieldMask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCollectionRequest) Reset()         { *m = UpdateCollectionRequest{} }
func (m *UpdateCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCollectionRequest) ProtoMessage()    {}
func (*UpdateCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{5}
}

func (m *UpdateCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCollectionRequest.Unmarshal(m, b)
}
func (m *UpdateCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCollectionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCollectionRequest.Merge(m, src)
}
func (m *UpdateCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCollectionRequest.Size(m)
}
func (m *UpdateCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCollectionRequest proto.InternalMessageInfo

func (m *UpdateCollectionRequest) GetCollection() *Collection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *UpdateCollectionRequest) GetFieldMask() *field_mask.FieldMask {
	if m != nil {
		return m.FieldMask
	}
	return nil
}

type DeleteCollectionRequest struct {
	// The resource name of the Collection to be deleted.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCollectionRequest) Reset()         { *m = DeleteCollectionRequest{} }
func (m *DeleteCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCollectionRequest) ProtoMessage()    {}
func (*DeleteCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eceb2b1ad103104, []int{6}
}

func (m *DeleteCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCollectionRequest.Unmarshal(m, b)
}
func (m *DeleteCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCollectionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCollectionRequest.Merge(m, src)
}
func (m *DeleteCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCollectionRequest.Size(m)
}
func (m *DeleteCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCollectionRequest proto.InternalMessageInfo

func (m *DeleteCollectionRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Collection)(nil), "proto.collection.Collection")
	proto.RegisterType((*ListCollectionsRequest)(nil), "proto.collection.ListCollectionsRequest")
	proto.RegisterType((*ListCollectionsResponse)(nil), "proto.collection.ListCollectionsResponse")
	proto.RegisterType((*GetCollectionRequest)(nil), "proto.collection.GetCollectionRequest")
	proto.RegisterType((*CreateCollectionRequest)(nil), "proto.collection.CreateCollectionRequest")
	proto.RegisterType((*UpdateCollectionRequest)(nil), "proto.collection.UpdateCollectionRequest")
	proto.RegisterType((*DeleteCollectionRequest)(nil), "proto.collection.DeleteCollectionRequest")
}

func init() {
	proto.RegisterFile("collection.proto", fileDescriptor_9eceb2b1ad103104)
}

var fileDescriptor_9eceb2b1ad103104 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x6d, 0xda, 0xed, 0x62, 0x6f, 0x59, 0x37, 0x0e, 0xd2, 0x86, 0xac, 0x62, 0xc8, 0x43, 0xc9,
	0x3e, 0x98, 0x40, 0xf5, 0xa1, 0x0f, 0x22, 0xe8, 0xfa, 0x81, 0xa0, 0x20, 0xd9, 0x95, 0x82, 0x20,
	0x25, 0x4d, 0xee, 0x66, 0x87, 0x26, 0x99, 0xd8, 0x99, 0x8a, 0xee, 0x9b, 0x3f, 0xc1, 0xff, 0xe5,
	0x5f, 0xf1, 0x3f, 0x48, 0x26, 0x6d, 0x13, 0x93, 0xd4, 0xee, 0x3e, 0x75, 0x7a, 0xef, 0x39, 0x67,
	0xee, 0x9d, 0x73, 0x5a, 0x50, 0x7d, 0x16, 0x45, 0xe8, 0x0b, 0xca, 0x12, 0x3b, 0x5d, 0x32, 0xc1,
	0x88, 0x2a, 0x3f, 0xec, 0xa2, 0xae, 0x3f, 0x0a, 0x19, 0x0b, 0x23, 0x74, 0x64, 0x63, 0xbe, 0xba,
	0x74, 0x04, 0x8d, 0x91, 0x0b, 0x2f, 0x4e, 0x73, 0x8a, 0x7e, 0x52, 0x05, 0x60, 0x9c, 0x8a, 0x1f,
	0xeb, 0xa6, 0x51, 0x6d, 0x5e, 0x52, 0x8c, 0x82, 0x59, 0xec, 0xf1, 0xc5, 0x1a, 0x01, 0x54, 0x60,
	0x9c, 0x9f, 0xcd, 0xdf, 0x0a, 0xc0, 0xd9, 0xf6, 0x6a, 0x72, 0x17, 0xda, 0x34, 0xd0, 0x14, 0x43,
	0xb1, 0x3a, 0x6e, 0x9b, 0x06, 0x84, 0xc0, 0x41, 0xe2, 0xc5, 0xa8, 0xb5, 0x0d, 0xc5, 0xea, 0xb9,
	0xf2, 0x4c, 0x46, 0xd0, 0xcd, 0x04, 0xb8, 0xd6, 0x31, 0x3a, 0x56, 0x7f, 0xac, 0xe6, 0x4a, 0xb6,
	0x14, 0x7d, 0x27, 0x30, 0x76, 0xf3, 0x36, 0x99, 0x40, 0xcf, 0x5f, 0xa2, 0x27, 0x30, 0x78, 0x21,
	0xb4, 0x03, 0x43, 0xb1, 0xfa, 0x63, 0xdd, 0xce, 0x87, 0xb3, 0x37, 0xc3, 0xd9, 0x17, 0x9b, 0xd5,
	0xdc, 0x02, 0x9c, 0x31, 0x57, 0x69, 0xb0, 0x66, 0x76, 0xf7, 0x33, 0xb7, 0x60, 0x33, 0x82, 0xc1,
	0x7b, 0xca, 0x45, 0xb1, 0x11, 0x77, 0xf1, 0xeb, 0x0a, 0xb9, 0x20, 0x03, 0x38, 0x4c, 0xbd, 0x25,
	0x26, 0x42, 0x6e, 0xd7, 0x73, 0xd7, 0xdf, 0xc8, 0x09, 0xf4, 0x52, 0x2f, 0xc4, 0x19, 0xa7, 0xd7,
	0xf9, 0x9a, 0x5d, 0xf7, 0x4e, 0x56, 0x38, 0xa7, 0xd7, 0x48, 0x1e, 0x02, 0xc8, 0xa6, 0x60, 0x0b,
	0x4c, 0xb4, 0x8e, 0x24, 0x4a, 0xf8, 0x45, 0x56, 0x30, 0x7f, 0x2a, 0x30, 0xac, 0x5d, 0xc7, 0x53,
	0x96, 0x70, 0x24, 0xcf, 0xa1, 0x5f, 0x58, 0xca, 0x35, 0x45, 0xbe, 0xd5, 0x03, 0xbb, 0x6a, 0xb6,
	0x5d, 0x70, 0xdd, 0x32, 0x81, 0x8c, 0xe0, 0x38, 0xc1, 0xef, 0x62, 0x56, 0xba, 0x3f, 0x37, 0xe1,
	0x28, 0x2b, 0x7f, 0xdc, 0xce, 0x30, 0x82, 0xfb, 0x6f, 0xb1, 0x34, 0xc1, 0x66, 0xdf, 0x8a, 0x93,
	0xe6, 0x14, 0x86, 0x67, 0xf2, 0x81, 0xeb, 0xd0, 0x67, 0x00, 0xc5, 0xcd, 0x72, 0xcb, 0x7d, 0x93,
	0x96, 0xf0, 0xe6, 0x2f, 0x05, 0x86, 0x9f, 0xa4, 0x01, 0xfb, 0x94, 0x95, 0xdb, 0x29, 0x67, 0x31,
	0x90, 0xd9, 0xfd, 0xe0, 0xf1, 0x85, 0x5c, 0xbe, 0x29, 0x06, 0x6f, 0x36, 0x08, 0xb7, 0x00, 0x9b,
	0xa7, 0x30, 0x7c, 0x85, 0x11, 0x36, 0x8d, 0x54, 0x79, 0x97, 0xf1, 0x9f, 0x0e, 0xdc, 0x2b, 0x50,
	0xe7, 0xb8, 0xfc, 0x46, 0x7d, 0x24, 0x57, 0x70, 0x5c, 0x31, 0x96, 0x58, 0xf5, 0xb9, 0x9b, 0xa3,
	0xa6, 0x9f, 0xde, 0x00, 0x99, 0xa7, 0xc4, 0x6c, 0x91, 0x29, 0x1c, 0xfd, 0xe3, 0x1f, 0x19, 0xd5,
	0xd9, 0x4d, 0x06, 0xeb, 0xff, 0x7d, 0x47, 0xb3, 0x45, 0xbe, 0x80, 0x5a, 0x35, 0x9c, 0x34, 0x4c,
	0xb6, 0x23, 0x14, 0x37, 0x91, 0xaf, 0xba, 0xde, 0x24, 0xbf, 0x23, 0x19, 0x7b, 0xe5, 0xa7, 0xa0,
	0x56, 0x1d, 0x6c, 0x92, 0xdf, 0xe1, 0xb2, 0x3e, 0xa8, 0xe5, 0xe4, 0x75, 0xf6, 0x17, 0x69, 0xb6,
	0x5e, 0x3e, 0xfd, 0x3c, 0x0e, 0xa9, 0xb8, 0x5a, 0xcd, 0x6d, 0x9f, 0xc5, 0x4e, 0x8a, 0x5e, 0xc2,
	0x26, 0x13, 0xa7, 0xf4, 0xcb, 0x7b, 0x2c, 0x29, 0x4e, 0xc8, 0x4a, 0xc5, 0xf9, 0xa1, 0x2c, 0x3e,
	0xf9, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x9c, 0xc0, 0xe2, 0xbf, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectionServiceClient is the client API for CollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectionServiceClient interface {
	ListCollections(ctx context.Context, in *ListCollectionsRequest, opts ...grpc.CallOption) (*ListCollectionsResponse, error)
	GetCollection(ctx context.Context, in *GetCollectionRequest, opts ...grpc.CallOption) (*Collection, error)
	CreateCollection(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*Collection, error)
	UpdateCollection(ctx context.Context, in *UpdateCollectionRequest, opts ...grpc.CallOption) (*Collection, error)
	DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type collectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectionServiceClient(cc grpc.ClientConnInterface) CollectionServiceClient {
	return &collectionServiceClient{cc}
}

func (c *collectionServiceClient) ListCollections(ctx context.Context, in *ListCollectionsRequest, opts ...grpc.CallOption) (*ListCollectionsResponse, error) {
	out := new(ListCollectionsResponse)
	err := c.cc.Invoke(ctx, "/proto.collection.CollectionService/ListCollections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionServiceClient) GetCollection(ctx context.Context, in *GetCollectionRequest, opts ...grpc.CallOption) (*Collection, error) {
	out := new(Collection)
	err := c.cc.Invoke(ctx, "/proto.collection.CollectionService/GetCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionServiceClient) CreateCollection(ctx context.Context, in *CreateCollectionRequest, opts ...grpc.CallOption) (*Collection, error) {
	out := new(Collection)
	err := c.cc.Invoke(ctx, "/proto.collection.CollectionService/CreateCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionServiceClient) UpdateCollection(ctx context.Context, in *UpdateCollectionRequest, opts ...grpc.CallOption) (*Collection, error) {
	out := new(Collection)
	err := c.cc.Invoke(ctx, "/proto.collection.CollectionService/UpdateCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectionServiceClient) DeleteCollection(ctx context.Context, in *DeleteCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.collection.CollectionService/DeleteCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectionServiceServer is the server API for CollectionService service.
type CollectionServiceServer interface {
	ListCollections(context.Context, *ListCollectionsRequest) (*ListCollectionsResponse, error)
	GetCollection(context.Context, *GetCollectionRequest) (*Collection, error)
	CreateCollection(context.Context, *CreateCollectionRequest) (*Collection, error)
	UpdateCollection(context.Context, *UpdateCollectionRequest) (*Collection, error)
	DeleteCollection(context.Context, *DeleteCollectionRequest) (*empty.Empty, error)
}

// UnimplementedCollectionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectionServiceServer struct {
}

func (*UnimplementedCollectionServiceServer) ListCollections(ctx context.Context, req *ListCollectionsRequest) (*ListCollectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCollections not implemented")
}
func (*UnimplementedCollectionServiceServer) GetCollection(ctx context.Context, req *GetCollectionRequest) (*Collection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollection not implemented")
}
func (*UnimplementedCollectionServiceServer) CreateCollection(ctx context.Context, req *CreateCollectionRequest) (*Collection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollection not implemented")
}
func (*UnimplementedCollectionServiceServer) UpdateCollection(ctx context.Context, req *UpdateCollectionRequest) (*Collection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCollection not implemented")
}
func (*UnimplementedCollectionServiceServer) DeleteCollection(ctx context.Context, req *DeleteCollectionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCollection not implemented")
}

func RegisterCollectionServiceServer(s *grpc.Server, srv CollectionServiceServer) {
	s.RegisterService(&_CollectionService_serviceDesc, srv)
}

func _CollectionService_ListCollections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCollectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).ListCollections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.collection.CollectionService/ListCollections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).ListCollections(ctx, req.(*ListCollectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionService_GetCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).GetCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.collection.CollectionService/GetCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).GetCollection(ctx, req.(*GetCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionService_CreateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).CreateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.collection.CollectionService/CreateCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).CreateCollection(ctx, req.(*CreateCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionService_UpdateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).UpdateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.collection.CollectionService/UpdateCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).UpdateCollection(ctx, req.(*UpdateCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectionService_DeleteCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).DeleteCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.collection.CollectionService/DeleteCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).DeleteCollection(ctx, req.(*DeleteCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.collection.CollectionService",
	HandlerType: (*CollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCollections",
			Handler:    _CollectionService_ListCollections_Handler,
		},
		{
			MethodName: "GetCollection",
			Handler:    _CollectionService_GetCollection_Handler,
		},
		{
			MethodName: "CreateCollection",
			Handler:    _CollectionService_CreateCollection_Handler,
		},
		{
			MethodName: "UpdateCollection",
			Handler:    _CollectionService_UpdateCollection_Handler,
		},
		{
			MethodName: "DeleteCollection",
			Handler:    _CollectionService_DeleteCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "collection.proto",
}
