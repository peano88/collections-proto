// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#include "item.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_item_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Item_item_2eproto;
namespace proto {
namespace item {
class ItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Item> _instance;
} _Item_default_instance_;
class CreateItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateItemRequest> _instance;
} _CreateItemRequest_default_instance_;
class UpdateItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateItemRequest> _instance;
} _UpdateItemRequest_default_instance_;
class DeleteItemRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteItemRequest> _instance;
} _DeleteItemRequest_default_instance_;
}  // namespace item
}  // namespace proto
static void InitDefaultsscc_info_CreateItemRequest_item_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::item::_CreateItemRequest_default_instance_;
    new (ptr) ::proto::item::CreateItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::item::CreateItemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateItemRequest_item_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateItemRequest_item_2eproto}, {
      &scc_info_Item_item_2eproto.base,}};

static void InitDefaultsscc_info_DeleteItemRequest_item_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::item::_DeleteItemRequest_default_instance_;
    new (ptr) ::proto::item::DeleteItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::item::DeleteItemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteItemRequest_item_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteItemRequest_item_2eproto}, {}};

static void InitDefaultsscc_info_Item_item_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::item::_Item_default_instance_;
    new (ptr) ::proto::item::Item();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::item::Item::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Item_item_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Item_item_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_UpdateItemRequest_item_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::item::_UpdateItemRequest_default_instance_;
    new (ptr) ::proto::item::UpdateItemRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::item::UpdateItemRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateItemRequest_item_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateItemRequest_item_2eproto}, {
      &scc_info_Item_item_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_item_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_item_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_item_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_item_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, id_),
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, collection_id_),
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, order_),
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, content_),
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, createdat_),
  PROTOBUF_FIELD_OFFSET(::proto::item::Item, updatedat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::item::CreateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::item::CreateItemRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::proto::item::CreateItemRequest, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::item::UpdateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::item::UpdateItemRequest, item_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::item::DeleteItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::item::DeleteItemRequest, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::item::Item)},
  { 11, -1, sizeof(::proto::item::CreateItemRequest)},
  { 18, -1, sizeof(::proto::item::UpdateItemRequest)},
  { 24, -1, sizeof(::proto::item::DeleteItemRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::item::_Item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::item::_CreateItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::item::_UpdateItemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::item::_DeleteItemRequest_default_instance_),
};

const char descriptor_table_protodef_item_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nitem.proto\022\nproto.item\032\037google/protobu"
  "f/timestamp.proto\032\033google/protobuf/empty"
  ".proto\"\247\001\n\004Item\022\n\n\002id\030\001 \001(\003\022\025\n\rcollectio"
  "n_id\030\002 \001(\003\022\r\n\005order\030\003 \001(\r\022\017\n\007content\030\004 \001"
  "(\t\022-\n\tcreatedAt\030\005 \001(\0132\032.google.protobuf."
  "Timestamp\022-\n\tupdatedAt\030\006 \001(\0132\032.google.pr"
  "otobuf.Timestamp\"C\n\021CreateItemRequest\022\016\n"
  "\006parent\030\001 \001(\003\022\036\n\004item\030\003 \001(\0132\020.proto.item"
  ".Item\"3\n\021UpdateItemRequest\022\036\n\004item\030\001 \001(\013"
  "2\020.proto.item.Item\"\037\n\021DeleteItemRequest\022"
  "\n\n\002id\030\001 \001(\0032\326\001\n\013ItemService\022\?\n\nCreateIte"
  "m\022\035.proto.item.CreateItemRequest\032\020.proto"
  ".item.Item\"\000\022\?\n\nUpdateItem\022\035.proto.item."
  "UpdateItemRequest\032\020.proto.item.Item\"\000\022E\n"
  "\nDeleteItem\022\035.proto.item.DeleteItemReque"
  "st\032\026.google.protobuf.Empty\"\000B.Z,github.c"
  "om/peano88/collections-proto/go/itemb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_item_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_item_2eproto_sccs[4] = {
  &scc_info_CreateItemRequest_item_2eproto.base,
  &scc_info_DeleteItemRequest_item_2eproto.base,
  &scc_info_Item_item_2eproto.base,
  &scc_info_UpdateItemRequest_item_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_item_2eproto_once;
static bool descriptor_table_item_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_item_2eproto = {
  &descriptor_table_item_2eproto_initialized, descriptor_table_protodef_item_2eproto, "item.proto", 684,
  &descriptor_table_item_2eproto_once, descriptor_table_item_2eproto_sccs, descriptor_table_item_2eproto_deps, 4, 2,
  schemas, file_default_instances, TableStruct_item_2eproto::offsets,
  file_level_metadata_item_2eproto, 4, file_level_enum_descriptors_item_2eproto, file_level_service_descriptors_item_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_item_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_item_2eproto), true);
namespace proto {
namespace item {

// ===================================================================

void Item::InitAsDefaultInstance() {
  ::proto::item::_Item_default_instance_._instance.get_mutable()->createdat_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::proto::item::_Item_default_instance_._instance.get_mutable()->updatedat_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Item::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& createdat(const Item* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updatedat(const Item* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Item::_Internal::createdat(const Item* msg) {
  return *msg->createdat_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Item::_Internal::updatedat(const Item* msg) {
  return *msg->updatedat_;
}
void Item::clear_createdat() {
  if (GetArenaNoVirtual() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
}
void Item::clear_updatedat() {
  if (GetArenaNoVirtual() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
}
Item::Item()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.item.Item)
}
Item::Item(const Item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from._internal_has_createdat()) {
    createdat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.createdat_);
  } else {
    createdat_ = nullptr;
  }
  if (from._internal_has_updatedat()) {
    updatedat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updatedat_);
  } else {
    updatedat_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_) -
    reinterpret_cast<char*>(&id_)) + sizeof(order_));
  // @@protoc_insertion_point(copy_constructor:proto.item.Item)
}

void Item::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Item_item_2eproto.base);
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&createdat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&createdat_)) + sizeof(order_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:proto.item.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete createdat_;
  if (this != internal_default_instance()) delete updatedat_;
}

void Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Item& Item::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Item_item_2eproto.base);
  return *internal_default_instance();
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.item.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_) -
      reinterpret_cast<char*>(&id_)) + sizeof(order_));
  _internal_metadata_.Clear();
}

const char* Item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 collection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          collection_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 order = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.item.Item.content"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp createdAt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createdat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updatedAt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatedat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Item::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.item.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // int64 collection_id = 2;
  if (this->collection_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_collection_id(), target);
  }

  // uint32 order = 3;
  if (this->order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_order(), target);
  }

  // string content = 4;
  if (this->content().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.item.Item.content");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_content(), target);
  }

  // .google.protobuf.Timestamp createdAt = 5;
  if (this->has_createdat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::createdat(this), target, stream);
  }

  // .google.protobuf.Timestamp updatedAt = 6;
  if (this->has_updatedat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::updatedat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.item.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.item.Item)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // .google.protobuf.Timestamp createdAt = 5;
  if (this->has_createdat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *createdat_);
  }

  // .google.protobuf.Timestamp updatedAt = 6;
  if (this->has_updatedat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updatedat_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 collection_id = 2;
  if (this->collection_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_collection_id());
  }

  // uint32 order = 3;
  if (this->order() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_order());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Item::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.item.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.item.Item)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.item.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.item.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_createdat()) {
    _internal_mutable_createdat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_createdat());
  }
  if (from.has_updatedat()) {
    _internal_mutable_updatedat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updatedat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.collection_id() != 0) {
    _internal_set_collection_id(from._internal_collection_id());
  }
  if (from.order() != 0) {
    _internal_set_order(from._internal_order());
  }
}

void Item::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.item.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.item.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::InternalSwap(Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(createdat_, other->createdat_);
  swap(updatedat_, other->updatedat_);
  swap(id_, other->id_);
  swap(collection_id_, other->collection_id_);
  swap(order_, other->order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Item::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateItemRequest::InitAsDefaultInstance() {
  ::proto::item::_CreateItemRequest_default_instance_._instance.get_mutable()->item_ = const_cast< ::proto::item::Item*>(
      ::proto::item::Item::internal_default_instance());
}
class CreateItemRequest::_Internal {
 public:
  static const ::proto::item::Item& item(const CreateItemRequest* msg);
};

const ::proto::item::Item&
CreateItemRequest::_Internal::item(const CreateItemRequest* msg) {
  return *msg->item_;
}
CreateItemRequest::CreateItemRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.item.CreateItemRequest)
}
CreateItemRequest::CreateItemRequest(const CreateItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::proto::item::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  parent_ = from.parent_;
  // @@protoc_insertion_point(copy_constructor:proto.item.CreateItemRequest)
}

void CreateItemRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateItemRequest_item_2eproto.base);
  ::memset(&item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parent_) -
      reinterpret_cast<char*>(&item_)) + sizeof(parent_));
}

CreateItemRequest::~CreateItemRequest() {
  // @@protoc_insertion_point(destructor:proto.item.CreateItemRequest)
  SharedDtor();
}

void CreateItemRequest::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void CreateItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateItemRequest& CreateItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateItemRequest_item_2eproto.base);
  return *internal_default_instance();
}


void CreateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.item.CreateItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  parent_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* CreateItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          parent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto.item.Item item = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.item.CreateItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 parent = 1;
  if (this->parent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_parent(), target);
  }

  // .proto.item.Item item = 3;
  if (this->has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.item.CreateItemRequest)
  return target;
}

size_t CreateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.item.CreateItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.item.Item item = 3;
  if (this->has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  // int64 parent = 1;
  if (this->parent() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_parent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.item.CreateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.item.CreateItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.item.CreateItemRequest)
    MergeFrom(*source);
  }
}

void CreateItemRequest::MergeFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.item.CreateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    _internal_mutable_item()->::proto::item::Item::MergeFrom(from._internal_item());
  }
  if (from.parent() != 0) {
    _internal_set_parent(from._internal_parent());
  }
}

void CreateItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.item.CreateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateItemRequest::CopyFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.item.CreateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateItemRequest::IsInitialized() const {
  return true;
}

void CreateItemRequest::InternalSwap(CreateItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(item_, other->item_);
  swap(parent_, other->parent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateItemRequest::InitAsDefaultInstance() {
  ::proto::item::_UpdateItemRequest_default_instance_._instance.get_mutable()->item_ = const_cast< ::proto::item::Item*>(
      ::proto::item::Item::internal_default_instance());
}
class UpdateItemRequest::_Internal {
 public:
  static const ::proto::item::Item& item(const UpdateItemRequest* msg);
};

const ::proto::item::Item&
UpdateItemRequest::_Internal::item(const UpdateItemRequest* msg) {
  return *msg->item_;
}
UpdateItemRequest::UpdateItemRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.item.UpdateItemRequest)
}
UpdateItemRequest::UpdateItemRequest(const UpdateItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_item()) {
    item_ = new ::proto::item::Item(*from.item_);
  } else {
    item_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.item.UpdateItemRequest)
}

void UpdateItemRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateItemRequest_item_2eproto.base);
  item_ = nullptr;
}

UpdateItemRequest::~UpdateItemRequest() {
  // @@protoc_insertion_point(destructor:proto.item.UpdateItemRequest)
  SharedDtor();
}

void UpdateItemRequest::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void UpdateItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateItemRequest& UpdateItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateItemRequest_item_2eproto.base);
  return *internal_default_instance();
}


void UpdateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.item.UpdateItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.item.Item item = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.item.UpdateItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.item.Item item = 1;
  if (this->has_item()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::item(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.item.UpdateItemRequest)
  return target;
}

size_t UpdateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.item.UpdateItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.item.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *item_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.item.UpdateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.item.UpdateItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.item.UpdateItemRequest)
    MergeFrom(*source);
  }
}

void UpdateItemRequest::MergeFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.item.UpdateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    _internal_mutable_item()->::proto::item::Item::MergeFrom(from._internal_item());
  }
}

void UpdateItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.item.UpdateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateItemRequest::CopyFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.item.UpdateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateItemRequest::IsInitialized() const {
  return true;
}

void UpdateItemRequest::InternalSwap(UpdateItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(item_, other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteItemRequest::InitAsDefaultInstance() {
}
class DeleteItemRequest::_Internal {
 public:
};

DeleteItemRequest::DeleteItemRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.item.DeleteItemRequest)
}
DeleteItemRequest::DeleteItemRequest(const DeleteItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.item.DeleteItemRequest)
}

void DeleteItemRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

DeleteItemRequest::~DeleteItemRequest() {
  // @@protoc_insertion_point(destructor:proto.item.DeleteItemRequest)
  SharedDtor();
}

void DeleteItemRequest::SharedDtor() {
}

void DeleteItemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteItemRequest& DeleteItemRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteItemRequest_item_2eproto.base);
  return *internal_default_instance();
}


void DeleteItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.item.DeleteItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* DeleteItemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteItemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.item.DeleteItemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.item.DeleteItemRequest)
  return target;
}

size_t DeleteItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.item.DeleteItemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteItemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.item.DeleteItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteItemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteItemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.item.DeleteItemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.item.DeleteItemRequest)
    MergeFrom(*source);
  }
}

void DeleteItemRequest::MergeFrom(const DeleteItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.item.DeleteItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteItemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.item.DeleteItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteItemRequest::CopyFrom(const DeleteItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.item.DeleteItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteItemRequest::IsInitialized() const {
  return true;
}

void DeleteItemRequest::InternalSwap(DeleteItemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteItemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace item
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::item::Item* Arena::CreateMaybeMessage< ::proto::item::Item >(Arena* arena) {
  return Arena::CreateInternal< ::proto::item::Item >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::item::CreateItemRequest* Arena::CreateMaybeMessage< ::proto::item::CreateItemRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::item::CreateItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::item::UpdateItemRequest* Arena::CreateMaybeMessage< ::proto::item::UpdateItemRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::item::UpdateItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::item::DeleteItemRequest* Arena::CreateMaybeMessage< ::proto::item::DeleteItemRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::item::DeleteItemRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
