// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_item_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_item_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_item_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_item_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_item_2eproto;
namespace proto {
namespace item {
class CreateItemRequest;
class CreateItemRequestDefaultTypeInternal;
extern CreateItemRequestDefaultTypeInternal _CreateItemRequest_default_instance_;
class DeleteItemRequest;
class DeleteItemRequestDefaultTypeInternal;
extern DeleteItemRequestDefaultTypeInternal _DeleteItemRequest_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class UpdateItemRequest;
class UpdateItemRequestDefaultTypeInternal;
extern UpdateItemRequestDefaultTypeInternal _UpdateItemRequest_default_instance_;
}  // namespace item
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> ::proto::item::CreateItemRequest* Arena::CreateMaybeMessage<::proto::item::CreateItemRequest>(Arena*);
template<> ::proto::item::DeleteItemRequest* Arena::CreateMaybeMessage<::proto::item::DeleteItemRequest>(Arena*);
template<> ::proto::item::Item* Arena::CreateMaybeMessage<::proto::item::Item>(Arena*);
template<> ::proto::item::UpdateItemRequest* Arena::CreateMaybeMessage<::proto::item::UpdateItemRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace proto {
namespace item {

// ===================================================================

class Item :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.item.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }
  inline void Swap(Item* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const final {
    return CreateMaybeMessage<Item>(nullptr);
  }

  Item* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Item>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Item* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.item.Item";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_item_2eproto);
    return ::descriptor_table_item_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 4,
    kCreatedAtFieldNumber = 5,
    kUpdatedAtFieldNumber = 6,
    kIdFieldNumber = 1,
    kCollectionIdFieldNumber = 2,
    kOrderFieldNumber = 3,
  };
  // string content = 4;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // .google.protobuf.Timestamp createdAt = 5;
  bool has_createdat() const;
  private:
  bool _internal_has_createdat() const;
  public:
  void clear_createdat();
  const PROTOBUF_NAMESPACE_ID::Timestamp& createdat() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_createdat();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_createdat();
  void set_allocated_createdat(PROTOBUF_NAMESPACE_ID::Timestamp* createdat);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_createdat() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_createdat();
  public:

  // .google.protobuf.Timestamp updatedAt = 6;
  bool has_updatedat() const;
  private:
  bool _internal_has_updatedat() const;
  public:
  void clear_updatedat();
  const PROTOBUF_NAMESPACE_ID::Timestamp& updatedat() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_updatedat();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_updatedat();
  void set_allocated_updatedat(PROTOBUF_NAMESPACE_ID::Timestamp* updatedat);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_updatedat() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_updatedat();
  public:

  // int64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 collection_id = 2;
  void clear_collection_id();
  ::PROTOBUF_NAMESPACE_ID::int64 collection_id() const;
  void set_collection_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_collection_id() const;
  void _internal_set_collection_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint32 order = 3;
  void clear_order();
  ::PROTOBUF_NAMESPACE_ID::uint32 order() const;
  void set_order(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_order() const;
  void _internal_set_order(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.item.Item)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  PROTOBUF_NAMESPACE_ID::Timestamp* createdat_;
  PROTOBUF_NAMESPACE_ID::Timestamp* updatedat_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  ::PROTOBUF_NAMESPACE_ID::int64 collection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 order_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class CreateItemRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.item.CreateItemRequest) */ {
 public:
  CreateItemRequest();
  virtual ~CreateItemRequest();

  CreateItemRequest(const CreateItemRequest& from);
  CreateItemRequest(CreateItemRequest&& from) noexcept
    : CreateItemRequest() {
    *this = ::std::move(from);
  }

  inline CreateItemRequest& operator=(const CreateItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateItemRequest& operator=(CreateItemRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateItemRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateItemRequest* internal_default_instance() {
    return reinterpret_cast<const CreateItemRequest*>(
               &_CreateItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateItemRequest& a, CreateItemRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateItemRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateItemRequest* New() const final {
    return CreateMaybeMessage<CreateItemRequest>(nullptr);
  }

  CreateItemRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateItemRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateItemRequest& from);
  void MergeFrom(const CreateItemRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateItemRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.item.CreateItemRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_item_2eproto);
    return ::descriptor_table_item_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 3,
    kParentFieldNumber = 1,
  };
  // .proto.item.Item item = 3;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::proto::item::Item& item() const;
  ::proto::item::Item* release_item();
  ::proto::item::Item* mutable_item();
  void set_allocated_item(::proto::item::Item* item);
  private:
  const ::proto::item::Item& _internal_item() const;
  ::proto::item::Item* _internal_mutable_item();
  public:

  // int64 parent = 1;
  void clear_parent();
  ::PROTOBUF_NAMESPACE_ID::int64 parent() const;
  void set_parent(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_parent() const;
  void _internal_set_parent(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.item.CreateItemRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::item::Item* item_;
  ::PROTOBUF_NAMESPACE_ID::int64 parent_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class UpdateItemRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.item.UpdateItemRequest) */ {
 public:
  UpdateItemRequest();
  virtual ~UpdateItemRequest();

  UpdateItemRequest(const UpdateItemRequest& from);
  UpdateItemRequest(UpdateItemRequest&& from) noexcept
    : UpdateItemRequest() {
    *this = ::std::move(from);
  }

  inline UpdateItemRequest& operator=(const UpdateItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateItemRequest& operator=(UpdateItemRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateItemRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateItemRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateItemRequest*>(
               &_UpdateItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UpdateItemRequest& a, UpdateItemRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateItemRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateItemRequest* New() const final {
    return CreateMaybeMessage<UpdateItemRequest>(nullptr);
  }

  UpdateItemRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateItemRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateItemRequest& from);
  void MergeFrom(const UpdateItemRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateItemRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.item.UpdateItemRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_item_2eproto);
    return ::descriptor_table_item_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
    kFieldMaskFieldNumber = 2,
  };
  // .proto.item.Item item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  const ::proto::item::Item& item() const;
  ::proto::item::Item* release_item();
  ::proto::item::Item* mutable_item();
  void set_allocated_item(::proto::item::Item* item);
  private:
  const ::proto::item::Item& _internal_item() const;
  ::proto::item::Item* _internal_mutable_item();
  public:

  // .google.protobuf.FieldMask fieldMask = 2;
  bool has_fieldmask() const;
  private:
  bool _internal_has_fieldmask() const;
  public:
  void clear_fieldmask();
  const PROTOBUF_NAMESPACE_ID::FieldMask& fieldmask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* release_fieldmask();
  PROTOBUF_NAMESPACE_ID::FieldMask* mutable_fieldmask();
  void set_allocated_fieldmask(PROTOBUF_NAMESPACE_ID::FieldMask* fieldmask);
  private:
  const PROTOBUF_NAMESPACE_ID::FieldMask& _internal_fieldmask() const;
  PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_fieldmask();
  public:

  // @@protoc_insertion_point(class_scope:proto.item.UpdateItemRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::item::Item* item_;
  PROTOBUF_NAMESPACE_ID::FieldMask* fieldmask_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class DeleteItemRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:proto.item.DeleteItemRequest) */ {
 public:
  DeleteItemRequest();
  virtual ~DeleteItemRequest();

  DeleteItemRequest(const DeleteItemRequest& from);
  DeleteItemRequest(DeleteItemRequest&& from) noexcept
    : DeleteItemRequest() {
    *this = ::std::move(from);
  }

  inline DeleteItemRequest& operator=(const DeleteItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteItemRequest& operator=(DeleteItemRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteItemRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteItemRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteItemRequest*>(
               &_DeleteItemRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DeleteItemRequest& a, DeleteItemRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteItemRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteItemRequest* New() const final {
    return CreateMaybeMessage<DeleteItemRequest>(nullptr);
  }

  DeleteItemRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteItemRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteItemRequest& from);
  void MergeFrom(const DeleteItemRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteItemRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "proto.item.DeleteItemRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_item_2eproto);
    return ::descriptor_table_item_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:proto.item.DeleteItemRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Item

// int64 id = 1;
inline void Item::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Item::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Item::id() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.id)
  return _internal_id();
}
inline void Item::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  id_ = value;
}
inline void Item::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:proto.item.Item.id)
}

// int64 collection_id = 2;
inline void Item::clear_collection_id() {
  collection_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Item::_internal_collection_id() const {
  return collection_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Item::collection_id() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.collection_id)
  return _internal_collection_id();
}
inline void Item::_internal_set_collection_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  collection_id_ = value;
}
inline void Item::set_collection_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_collection_id(value);
  // @@protoc_insertion_point(field_set:proto.item.Item.collection_id)
}

// uint32 order = 3;
inline void Item::clear_order() {
  order_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::_internal_order() const {
  return order_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Item::order() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.order)
  return _internal_order();
}
inline void Item::_internal_set_order(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  order_ = value;
}
inline void Item::set_order(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_order(value);
  // @@protoc_insertion_point(field_set:proto.item.Item.order)
}

// string content = 4;
inline void Item::clear_content() {
  content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Item::content() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.content)
  return _internal_content();
}
inline void Item::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:proto.item.Item.content)
}
inline std::string* Item::mutable_content() {
  // @@protoc_insertion_point(field_mutable:proto.item.Item.content)
  return _internal_mutable_content();
}
inline const std::string& Item::_internal_content() const {
  return content_.GetNoArena();
}
inline void Item::_internal_set_content(const std::string& value) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Item::set_content(std::string&& value) {
  
  content_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.item.Item.content)
}
inline void Item::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.item.Item.content)
}
inline void Item::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.item.Item.content)
}
inline std::string* Item::_internal_mutable_content() {
  
  return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Item::release_content() {
  // @@protoc_insertion_point(field_release:proto.item.Item.content)
  
  return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.item.Item.content)
}

// .google.protobuf.Timestamp createdAt = 5;
inline bool Item::_internal_has_createdat() const {
  return this != internal_default_instance() && createdat_ != nullptr;
}
inline bool Item::has_createdat() const {
  return _internal_has_createdat();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Item::_internal_createdat() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = createdat_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Item::createdat() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.createdAt)
  return _internal_createdat();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::release_createdat() {
  // @@protoc_insertion_point(field_release:proto.item.Item.createdAt)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = createdat_;
  createdat_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::_internal_mutable_createdat() {
  
  if (createdat_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    createdat_ = p;
  }
  return createdat_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::mutable_createdat() {
  // @@protoc_insertion_point(field_mutable:proto.item.Item.createdAt)
  return _internal_mutable_createdat();
}
inline void Item::set_allocated_createdat(PROTOBUF_NAMESPACE_ID::Timestamp* createdat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(createdat_);
  }
  if (createdat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(createdat)->GetArena();
    if (message_arena != submessage_arena) {
      createdat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, createdat, submessage_arena);
    }
    
  } else {
    
  }
  createdat_ = createdat;
  // @@protoc_insertion_point(field_set_allocated:proto.item.Item.createdAt)
}

// .google.protobuf.Timestamp updatedAt = 6;
inline bool Item::_internal_has_updatedat() const {
  return this != internal_default_instance() && updatedat_ != nullptr;
}
inline bool Item::has_updatedat() const {
  return _internal_has_updatedat();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Item::_internal_updatedat() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = updatedat_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& Item::updatedat() const {
  // @@protoc_insertion_point(field_get:proto.item.Item.updatedAt)
  return _internal_updatedat();
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::release_updatedat() {
  // @@protoc_insertion_point(field_release:proto.item.Item.updatedAt)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = updatedat_;
  updatedat_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::_internal_mutable_updatedat() {
  
  if (updatedat_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArenaNoVirtual());
    updatedat_ = p;
  }
  return updatedat_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* Item::mutable_updatedat() {
  // @@protoc_insertion_point(field_mutable:proto.item.Item.updatedAt)
  return _internal_mutable_updatedat();
}
inline void Item::set_allocated_updatedat(PROTOBUF_NAMESPACE_ID::Timestamp* updatedat) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updatedat_);
  }
  if (updatedat) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updatedat)->GetArena();
    if (message_arena != submessage_arena) {
      updatedat = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updatedat, submessage_arena);
    }
    
  } else {
    
  }
  updatedat_ = updatedat;
  // @@protoc_insertion_point(field_set_allocated:proto.item.Item.updatedAt)
}

// -------------------------------------------------------------------

// CreateItemRequest

// int64 parent = 1;
inline void CreateItemRequest::clear_parent() {
  parent_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CreateItemRequest::_internal_parent() const {
  return parent_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CreateItemRequest::parent() const {
  // @@protoc_insertion_point(field_get:proto.item.CreateItemRequest.parent)
  return _internal_parent();
}
inline void CreateItemRequest::_internal_set_parent(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  parent_ = value;
}
inline void CreateItemRequest::set_parent(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_parent(value);
  // @@protoc_insertion_point(field_set:proto.item.CreateItemRequest.parent)
}

// .proto.item.Item item = 3;
inline bool CreateItemRequest::_internal_has_item() const {
  return this != internal_default_instance() && item_ != nullptr;
}
inline bool CreateItemRequest::has_item() const {
  return _internal_has_item();
}
inline void CreateItemRequest::clear_item() {
  if (GetArenaNoVirtual() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
inline const ::proto::item::Item& CreateItemRequest::_internal_item() const {
  const ::proto::item::Item* p = item_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::item::Item*>(
      &::proto::item::_Item_default_instance_);
}
inline const ::proto::item::Item& CreateItemRequest::item() const {
  // @@protoc_insertion_point(field_get:proto.item.CreateItemRequest.item)
  return _internal_item();
}
inline ::proto::item::Item* CreateItemRequest::release_item() {
  // @@protoc_insertion_point(field_release:proto.item.CreateItemRequest.item)
  
  ::proto::item::Item* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::proto::item::Item* CreateItemRequest::_internal_mutable_item() {
  
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::item::Item>(GetArenaNoVirtual());
    item_ = p;
  }
  return item_;
}
inline ::proto::item::Item* CreateItemRequest::mutable_item() {
  // @@protoc_insertion_point(field_mutable:proto.item.CreateItemRequest.item)
  return _internal_mutable_item();
}
inline void CreateItemRequest::set_allocated_item(::proto::item::Item* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_;
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:proto.item.CreateItemRequest.item)
}

// -------------------------------------------------------------------

// UpdateItemRequest

// .proto.item.Item item = 1;
inline bool UpdateItemRequest::_internal_has_item() const {
  return this != internal_default_instance() && item_ != nullptr;
}
inline bool UpdateItemRequest::has_item() const {
  return _internal_has_item();
}
inline void UpdateItemRequest::clear_item() {
  if (GetArenaNoVirtual() == nullptr && item_ != nullptr) {
    delete item_;
  }
  item_ = nullptr;
}
inline const ::proto::item::Item& UpdateItemRequest::_internal_item() const {
  const ::proto::item::Item* p = item_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto::item::Item*>(
      &::proto::item::_Item_default_instance_);
}
inline const ::proto::item::Item& UpdateItemRequest::item() const {
  // @@protoc_insertion_point(field_get:proto.item.UpdateItemRequest.item)
  return _internal_item();
}
inline ::proto::item::Item* UpdateItemRequest::release_item() {
  // @@protoc_insertion_point(field_release:proto.item.UpdateItemRequest.item)
  
  ::proto::item::Item* temp = item_;
  item_ = nullptr;
  return temp;
}
inline ::proto::item::Item* UpdateItemRequest::_internal_mutable_item() {
  
  if (item_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto::item::Item>(GetArenaNoVirtual());
    item_ = p;
  }
  return item_;
}
inline ::proto::item::Item* UpdateItemRequest::mutable_item() {
  // @@protoc_insertion_point(field_mutable:proto.item.UpdateItemRequest.item)
  return _internal_mutable_item();
}
inline void UpdateItemRequest::set_allocated_item(::proto::item::Item* item) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete item_;
  }
  if (item) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      item = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:proto.item.UpdateItemRequest.item)
}

// .google.protobuf.FieldMask fieldMask = 2;
inline bool UpdateItemRequest::_internal_has_fieldmask() const {
  return this != internal_default_instance() && fieldmask_ != nullptr;
}
inline bool UpdateItemRequest::has_fieldmask() const {
  return _internal_has_fieldmask();
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateItemRequest::_internal_fieldmask() const {
  const PROTOBUF_NAMESPACE_ID::FieldMask* p = fieldmask_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::FieldMask*>(
      &PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::FieldMask& UpdateItemRequest::fieldmask() const {
  // @@protoc_insertion_point(field_get:proto.item.UpdateItemRequest.fieldMask)
  return _internal_fieldmask();
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateItemRequest::release_fieldmask() {
  // @@protoc_insertion_point(field_release:proto.item.UpdateItemRequest.fieldMask)
  
  PROTOBUF_NAMESPACE_ID::FieldMask* temp = fieldmask_;
  fieldmask_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateItemRequest::_internal_mutable_fieldmask() {
  
  if (fieldmask_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaNoVirtual());
    fieldmask_ = p;
  }
  return fieldmask_;
}
inline PROTOBUF_NAMESPACE_ID::FieldMask* UpdateItemRequest::mutable_fieldmask() {
  // @@protoc_insertion_point(field_mutable:proto.item.UpdateItemRequest.fieldMask)
  return _internal_mutable_fieldmask();
}
inline void UpdateItemRequest::set_allocated_fieldmask(PROTOBUF_NAMESPACE_ID::FieldMask* fieldmask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(fieldmask_);
  }
  if (fieldmask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fieldmask)->GetArena();
    if (message_arena != submessage_arena) {
      fieldmask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fieldmask, submessage_arena);
    }
    
  } else {
    
  }
  fieldmask_ = fieldmask;
  // @@protoc_insertion_point(field_set_allocated:proto.item.UpdateItemRequest.fieldMask)
}

// -------------------------------------------------------------------

// DeleteItemRequest

// int64 id = 1;
inline void DeleteItemRequest::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DeleteItemRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 DeleteItemRequest::id() const {
  // @@protoc_insertion_point(field_get:proto.item.DeleteItemRequest.id)
  return _internal_id();
}
inline void DeleteItemRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  id_ = value;
}
inline void DeleteItemRequest::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:proto.item.DeleteItemRequest.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace item
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_item_2eproto
