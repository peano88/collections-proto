// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collection.proto

#include "collection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_collection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Collection_collection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_item_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Item_item_2eproto;
namespace proto {
namespace collection {
class CollectionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Collection> _instance;
} _Collection_default_instance_;
class ListCollectionsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCollectionsRequest> _instance;
} _ListCollectionsRequest_default_instance_;
class ListCollectionsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCollectionsResponse> _instance;
} _ListCollectionsResponse_default_instance_;
class GetCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCollectionRequest> _instance;
} _GetCollectionRequest_default_instance_;
class CreateCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCollectionRequest> _instance;
} _CreateCollectionRequest_default_instance_;
class UpdateCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCollectionRequest> _instance;
} _UpdateCollectionRequest_default_instance_;
class DeleteCollectionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCollectionRequest> _instance;
} _DeleteCollectionRequest_default_instance_;
}  // namespace collection
}  // namespace proto
static void InitDefaultsscc_info_Collection_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_Collection_default_instance_;
    new (ptr) ::proto::collection::Collection();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::Collection::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Collection_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Collection_collection_2eproto}, {
      &scc_info_Item_item_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_CreateCollectionRequest_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_CreateCollectionRequest_default_instance_;
    new (ptr) ::proto::collection::CreateCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::CreateCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCollectionRequest_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCollectionRequest_collection_2eproto}, {
      &scc_info_Collection_collection_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCollectionRequest_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_DeleteCollectionRequest_default_instance_;
    new (ptr) ::proto::collection::DeleteCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::DeleteCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCollectionRequest_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCollectionRequest_collection_2eproto}, {}};

static void InitDefaultsscc_info_GetCollectionRequest_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_GetCollectionRequest_default_instance_;
    new (ptr) ::proto::collection::GetCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::GetCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCollectionRequest_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCollectionRequest_collection_2eproto}, {}};

static void InitDefaultsscc_info_ListCollectionsRequest_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_ListCollectionsRequest_default_instance_;
    new (ptr) ::proto::collection::ListCollectionsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::ListCollectionsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCollectionsRequest_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCollectionsRequest_collection_2eproto}, {}};

static void InitDefaultsscc_info_ListCollectionsResponse_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_ListCollectionsResponse_default_instance_;
    new (ptr) ::proto::collection::ListCollectionsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::ListCollectionsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCollectionsResponse_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCollectionsResponse_collection_2eproto}, {
      &scc_info_Collection_collection_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCollectionRequest_collection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::collection::_UpdateCollectionRequest_default_instance_;
    new (ptr) ::proto::collection::UpdateCollectionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::collection::UpdateCollectionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateCollectionRequest_collection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateCollectionRequest_collection_2eproto}, {
      &scc_info_Collection_collection_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_collection_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_collection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_collection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_collection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, id_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, name_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, items_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, createdat_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::Collection, updatedat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsResponse, collections_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::ListCollectionsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::GetCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::GetCollectionRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::CreateCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::CreateCollectionRequest, collection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::UpdateCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::UpdateCollectionRequest, collection_),
  PROTOBUF_FIELD_OFFSET(::proto::collection::UpdateCollectionRequest, fieldmask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::collection::DeleteCollectionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::proto::collection::DeleteCollectionRequest, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::collection::Collection)},
  { 10, -1, sizeof(::proto::collection::ListCollectionsRequest)},
  { 18, -1, sizeof(::proto::collection::ListCollectionsResponse)},
  { 25, -1, sizeof(::proto::collection::GetCollectionRequest)},
  { 31, -1, sizeof(::proto::collection::CreateCollectionRequest)},
  { 37, -1, sizeof(::proto::collection::UpdateCollectionRequest)},
  { 44, -1, sizeof(::proto::collection::DeleteCollectionRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_Collection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_ListCollectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_ListCollectionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_GetCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_CreateCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_UpdateCollectionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::proto::collection::_DeleteCollectionRequest_default_instance_),
};

const char descriptor_table_protodef_collection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020collection.proto\022\020proto.collection\032\037go"
  "ogle/protobuf/timestamp.proto\032\033google/pr"
  "otobuf/empty.proto\032 google/protobuf/fiel"
  "d_mask.proto\032\nitem.proto\"\245\001\n\nCollection\022"
  "\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\037\n\005items\030\003 \003(\013"
  "2\020.proto.item.Item\022-\n\tcreatedAt\030\004 \001(\0132\032."
  "google.protobuf.Timestamp\022-\n\tupdatedAt\030\005"
  " \001(\0132\032.google.protobuf.Timestamp\"O\n\026List"
  "CollectionsRequest\022\016\n\006parent\030\001 \001(\t\022\021\n\tpa"
  "ge_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\"e\n\027Lis"
  "tCollectionsResponse\0221\n\013collections\030\001 \003("
  "\0132\034.proto.collection.Collection\022\027\n\017next_"
  "page_token\030\002 \001(\t\"\"\n\024GetCollectionRequest"
  "\022\n\n\002id\030\001 \001(\003\"K\n\027CreateCollectionRequest\022"
  "0\n\ncollection\030\003 \001(\0132\034.proto.collection.C"
  "ollection\"z\n\027UpdateCollectionRequest\0220\n\n"
  "collection\030\001 \001(\0132\034.proto.collection.Coll"
  "ection\022-\n\tfieldMask\030\002 \001(\0132\032.google.proto"
  "buf.FieldMask\"%\n\027DeleteCollectionRequest"
  "\022\n\n\002id\030\001 \001(\0032\355\003\n\021CollectionService\022h\n\017Li"
  "stCollections\022(.proto.collection.ListCol"
  "lectionsRequest\032).proto.collection.ListC"
  "ollectionsResponse\"\000\022W\n\rGetCollection\022&."
  "proto.collection.GetCollectionRequest\032\034."
  "proto.collection.Collection\"\000\022]\n\020CreateC"
  "ollection\022).proto.collection.CreateColle"
  "ctionRequest\032\034.proto.collection.Collecti"
  "on\"\000\022]\n\020UpdateCollection\022).proto.collect"
  "ion.UpdateCollectionRequest\032\034.proto.coll"
  "ection.Collection\"\000\022W\n\020DeleteCollection\022"
  ").proto.collection.DeleteCollectionReque"
  "st\032\026.google.protobuf.Empty\"\000B4Z2github.c"
  "om/peano88/collections-proto/go/collecti"
  "onb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_collection_2eproto_deps[4] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_item_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_collection_2eproto_sccs[7] = {
  &scc_info_Collection_collection_2eproto.base,
  &scc_info_CreateCollectionRequest_collection_2eproto.base,
  &scc_info_DeleteCollectionRequest_collection_2eproto.base,
  &scc_info_GetCollectionRequest_collection_2eproto.base,
  &scc_info_ListCollectionsRequest_collection_2eproto.base,
  &scc_info_ListCollectionsResponse_collection_2eproto.base,
  &scc_info_UpdateCollectionRequest_collection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_collection_2eproto_once;
static bool descriptor_table_collection_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_collection_2eproto = {
  &descriptor_table_collection_2eproto_initialized, descriptor_table_protodef_collection_2eproto, "collection.proto", 1330,
  &descriptor_table_collection_2eproto_once, descriptor_table_collection_2eproto_sccs, descriptor_table_collection_2eproto_deps, 7, 4,
  schemas, file_default_instances, TableStruct_collection_2eproto::offsets,
  file_level_metadata_collection_2eproto, 7, file_level_enum_descriptors_collection_2eproto, file_level_service_descriptors_collection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_collection_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_collection_2eproto), true);
namespace proto {
namespace collection {

// ===================================================================

void Collection::InitAsDefaultInstance() {
  ::proto::collection::_Collection_default_instance_._instance.get_mutable()->createdat_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::proto::collection::_Collection_default_instance_._instance.get_mutable()->updatedat_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Collection::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& createdat(const Collection* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& updatedat(const Collection* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Collection::_Internal::createdat(const Collection* msg) {
  return *msg->createdat_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Collection::_Internal::updatedat(const Collection* msg) {
  return *msg->updatedat_;
}
void Collection::clear_items() {
  items_.Clear();
}
void Collection::clear_createdat() {
  if (GetArenaNoVirtual() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
}
void Collection::clear_updatedat() {
  if (GetArenaNoVirtual() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
}
Collection::Collection()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.Collection)
}
Collection::Collection(const Collection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from._internal_has_createdat()) {
    createdat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.createdat_);
  } else {
    createdat_ = nullptr;
  }
  if (from._internal_has_updatedat()) {
    updatedat_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.updatedat_);
  } else {
    updatedat_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.collection.Collection)
}

void Collection::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Collection_collection_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&createdat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&createdat_)) + sizeof(id_));
}

Collection::~Collection() {
  // @@protoc_insertion_point(destructor:proto.collection.Collection)
  SharedDtor();
}

void Collection::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete createdat_;
  if (this != internal_default_instance()) delete updatedat_;
}

void Collection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Collection& Collection::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Collection_collection_2eproto.base);
  return *internal_default_instance();
}


void Collection::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.Collection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && createdat_ != nullptr) {
    delete createdat_;
  }
  createdat_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && updatedat_ != nullptr) {
    delete updatedat_;
  }
  updatedat_ = nullptr;
  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Collection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.collection.Collection.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .proto.item.Item items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp createdAt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_createdat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updatedAt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatedat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Collection::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.Collection)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.collection.Collection.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated .proto.item.Item items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_items(i), target, stream);
  }

  // .google.protobuf.Timestamp createdAt = 4;
  if (this->has_createdat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::createdat(this), target, stream);
  }

  // .google.protobuf.Timestamp updatedAt = 5;
  if (this->has_updatedat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::updatedat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.Collection)
  return target;
}

size_t Collection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.Collection)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.item.Item items = 3;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .google.protobuf.Timestamp createdAt = 4;
  if (this->has_createdat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *createdat_);
  }

  // .google.protobuf.Timestamp updatedAt = 5;
  if (this->has_updatedat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updatedat_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Collection::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  const Collection* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Collection>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.Collection)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.Collection)
    MergeFrom(*source);
  }
}

void Collection::MergeFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.Collection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_createdat()) {
    _internal_mutable_createdat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_createdat());
  }
  if (from.has_updatedat()) {
    _internal_mutable_updatedat()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_updatedat());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Collection::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Collection::CopyFrom(const Collection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.Collection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Collection::IsInitialized() const {
  return true;
}

void Collection::InternalSwap(Collection* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(createdat_, other->createdat_);
  swap(updatedat_, other->updatedat_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Collection::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCollectionsRequest::InitAsDefaultInstance() {
}
class ListCollectionsRequest::_Internal {
 public:
};

ListCollectionsRequest::ListCollectionsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.ListCollectionsRequest)
}
ListCollectionsRequest::ListCollectionsRequest(const ListCollectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:proto.collection.ListCollectionsRequest)
}

void ListCollectionsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCollectionsRequest_collection_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListCollectionsRequest::~ListCollectionsRequest() {
  // @@protoc_insertion_point(destructor:proto.collection.ListCollectionsRequest)
  SharedDtor();
}

void ListCollectionsRequest::SharedDtor() {
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCollectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCollectionsRequest& ListCollectionsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCollectionsRequest_collection_2eproto.base);
  return *internal_default_instance();
}


void ListCollectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.ListCollectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListCollectionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.collection.ListCollectionsRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.collection.ListCollectionsRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCollectionsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.ListCollectionsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.collection.ListCollectionsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.collection.ListCollectionsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.ListCollectionsRequest)
  return target;
}

size_t ListCollectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.ListCollectionsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCollectionsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.ListCollectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCollectionsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCollectionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.ListCollectionsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.ListCollectionsRequest)
    MergeFrom(*source);
  }
}

void ListCollectionsRequest::MergeFrom(const ListCollectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.ListCollectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListCollectionsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.ListCollectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCollectionsRequest::CopyFrom(const ListCollectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.ListCollectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCollectionsRequest::IsInitialized() const {
  return true;
}

void ListCollectionsRequest::InternalSwap(ListCollectionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCollectionsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListCollectionsResponse::InitAsDefaultInstance() {
}
class ListCollectionsResponse::_Internal {
 public:
};

ListCollectionsResponse::ListCollectionsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.ListCollectionsResponse)
}
ListCollectionsResponse::ListCollectionsResponse(const ListCollectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      collections_(from.collections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.collection.ListCollectionsResponse)
}

void ListCollectionsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCollectionsResponse_collection_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListCollectionsResponse::~ListCollectionsResponse() {
  // @@protoc_insertion_point(destructor:proto.collection.ListCollectionsResponse)
  SharedDtor();
}

void ListCollectionsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCollectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCollectionsResponse& ListCollectionsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCollectionsResponse_collection_2eproto.base);
  return *internal_default_instance();
}


void ListCollectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.ListCollectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collections_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ListCollectionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .proto.collection.Collection collections = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_collections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "proto.collection.ListCollectionsResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCollectionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.ListCollectionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.collection.Collection collections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_collections_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_collections(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.collection.ListCollectionsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.ListCollectionsResponse)
  return target;
}

size_t ListCollectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.ListCollectionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.collection.Collection collections = 1;
  total_size += 1UL * this->_internal_collections_size();
  for (const auto& msg : this->collections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCollectionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.ListCollectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCollectionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCollectionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.ListCollectionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.ListCollectionsResponse)
    MergeFrom(*source);
  }
}

void ListCollectionsResponse::MergeFrom(const ListCollectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.ListCollectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  collections_.MergeFrom(from.collections_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListCollectionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.ListCollectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCollectionsResponse::CopyFrom(const ListCollectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.ListCollectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCollectionsResponse::IsInitialized() const {
  return true;
}

void ListCollectionsResponse::InternalSwap(ListCollectionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  collections_.InternalSwap(&other->collections_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCollectionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetCollectionRequest::InitAsDefaultInstance() {
}
class GetCollectionRequest::_Internal {
 public:
};

GetCollectionRequest::GetCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.GetCollectionRequest)
}
GetCollectionRequest::GetCollectionRequest(const GetCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.collection.GetCollectionRequest)
}

void GetCollectionRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

GetCollectionRequest::~GetCollectionRequest() {
  // @@protoc_insertion_point(destructor:proto.collection.GetCollectionRequest)
  SharedDtor();
}

void GetCollectionRequest::SharedDtor() {
}

void GetCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCollectionRequest& GetCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCollectionRequest_collection_2eproto.base);
  return *internal_default_instance();
}


void GetCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.GetCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* GetCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.GetCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.GetCollectionRequest)
  return target;
}

size_t GetCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.GetCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.GetCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.GetCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.GetCollectionRequest)
    MergeFrom(*source);
  }
}

void GetCollectionRequest::MergeFrom(const GetCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.GetCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.GetCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCollectionRequest::CopyFrom(const GetCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.GetCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCollectionRequest::IsInitialized() const {
  return true;
}

void GetCollectionRequest::InternalSwap(GetCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateCollectionRequest::InitAsDefaultInstance() {
  ::proto::collection::_CreateCollectionRequest_default_instance_._instance.get_mutable()->collection_ = const_cast< ::proto::collection::Collection*>(
      ::proto::collection::Collection::internal_default_instance());
}
class CreateCollectionRequest::_Internal {
 public:
  static const ::proto::collection::Collection& collection(const CreateCollectionRequest* msg);
};

const ::proto::collection::Collection&
CreateCollectionRequest::_Internal::collection(const CreateCollectionRequest* msg) {
  return *msg->collection_;
}
CreateCollectionRequest::CreateCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.CreateCollectionRequest)
}
CreateCollectionRequest::CreateCollectionRequest(const CreateCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_collection()) {
    collection_ = new ::proto::collection::Collection(*from.collection_);
  } else {
    collection_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.collection.CreateCollectionRequest)
}

void CreateCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCollectionRequest_collection_2eproto.base);
  collection_ = nullptr;
}

CreateCollectionRequest::~CreateCollectionRequest() {
  // @@protoc_insertion_point(destructor:proto.collection.CreateCollectionRequest)
  SharedDtor();
}

void CreateCollectionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete collection_;
}

void CreateCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCollectionRequest& CreateCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCollectionRequest_collection_2eproto.base);
  return *internal_default_instance();
}


void CreateCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.CreateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && collection_ != nullptr) {
    delete collection_;
  }
  collection_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.collection.Collection collection = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_collection(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.CreateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.collection.Collection collection = 3;
  if (this->has_collection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::collection(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.CreateCollectionRequest)
  return target;
}

size_t CreateCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.CreateCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.collection.Collection collection = 3;
  if (this->has_collection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *collection_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.CreateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.CreateCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.CreateCollectionRequest)
    MergeFrom(*source);
  }
}

void CreateCollectionRequest::MergeFrom(const CreateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.CreateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_collection()) {
    _internal_mutable_collection()->::proto::collection::Collection::MergeFrom(from._internal_collection());
  }
}

void CreateCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.CreateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCollectionRequest::CopyFrom(const CreateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.CreateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCollectionRequest::IsInitialized() const {
  return true;
}

void CreateCollectionRequest::InternalSwap(CreateCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(collection_, other->collection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateCollectionRequest::InitAsDefaultInstance() {
  ::proto::collection::_UpdateCollectionRequest_default_instance_._instance.get_mutable()->collection_ = const_cast< ::proto::collection::Collection*>(
      ::proto::collection::Collection::internal_default_instance());
  ::proto::collection::_UpdateCollectionRequest_default_instance_._instance.get_mutable()->fieldmask_ = const_cast< PROTOBUF_NAMESPACE_ID::FieldMask*>(
      PROTOBUF_NAMESPACE_ID::FieldMask::internal_default_instance());
}
class UpdateCollectionRequest::_Internal {
 public:
  static const ::proto::collection::Collection& collection(const UpdateCollectionRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& fieldmask(const UpdateCollectionRequest* msg);
};

const ::proto::collection::Collection&
UpdateCollectionRequest::_Internal::collection(const UpdateCollectionRequest* msg) {
  return *msg->collection_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCollectionRequest::_Internal::fieldmask(const UpdateCollectionRequest* msg) {
  return *msg->fieldmask_;
}
void UpdateCollectionRequest::clear_fieldmask() {
  if (GetArenaNoVirtual() == nullptr && fieldmask_ != nullptr) {
    delete fieldmask_;
  }
  fieldmask_ = nullptr;
}
UpdateCollectionRequest::UpdateCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.UpdateCollectionRequest)
}
UpdateCollectionRequest::UpdateCollectionRequest(const UpdateCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_collection()) {
    collection_ = new ::proto::collection::Collection(*from.collection_);
  } else {
    collection_ = nullptr;
  }
  if (from._internal_has_fieldmask()) {
    fieldmask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.fieldmask_);
  } else {
    fieldmask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:proto.collection.UpdateCollectionRequest)
}

void UpdateCollectionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCollectionRequest_collection_2eproto.base);
  ::memset(&collection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fieldmask_) -
      reinterpret_cast<char*>(&collection_)) + sizeof(fieldmask_));
}

UpdateCollectionRequest::~UpdateCollectionRequest() {
  // @@protoc_insertion_point(destructor:proto.collection.UpdateCollectionRequest)
  SharedDtor();
}

void UpdateCollectionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete collection_;
  if (this != internal_default_instance()) delete fieldmask_;
}

void UpdateCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCollectionRequest& UpdateCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCollectionRequest_collection_2eproto.base);
  return *internal_default_instance();
}


void UpdateCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.UpdateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && collection_ != nullptr) {
    delete collection_;
  }
  collection_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && fieldmask_ != nullptr) {
    delete fieldmask_;
  }
  fieldmask_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto.collection.Collection collection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_collection(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask fieldMask = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_fieldmask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.UpdateCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.collection.Collection collection = 1;
  if (this->has_collection()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::collection(this), target, stream);
  }

  // .google.protobuf.FieldMask fieldMask = 2;
  if (this->has_fieldmask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::fieldmask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.UpdateCollectionRequest)
  return target;
}

size_t UpdateCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.UpdateCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.collection.Collection collection = 1;
  if (this->has_collection()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *collection_);
  }

  // .google.protobuf.FieldMask fieldMask = 2;
  if (this->has_fieldmask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fieldmask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.UpdateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.UpdateCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.UpdateCollectionRequest)
    MergeFrom(*source);
  }
}

void UpdateCollectionRequest::MergeFrom(const UpdateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.UpdateCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_collection()) {
    _internal_mutable_collection()->::proto::collection::Collection::MergeFrom(from._internal_collection());
  }
  if (from.has_fieldmask()) {
    _internal_mutable_fieldmask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_fieldmask());
  }
}

void UpdateCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.UpdateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCollectionRequest::CopyFrom(const UpdateCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.UpdateCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCollectionRequest::IsInitialized() const {
  return true;
}

void UpdateCollectionRequest::InternalSwap(UpdateCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(collection_, other->collection_);
  swap(fieldmask_, other->fieldmask_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteCollectionRequest::InitAsDefaultInstance() {
}
class DeleteCollectionRequest::_Internal {
 public:
};

DeleteCollectionRequest::DeleteCollectionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.collection.DeleteCollectionRequest)
}
DeleteCollectionRequest::DeleteCollectionRequest(const DeleteCollectionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.collection.DeleteCollectionRequest)
}

void DeleteCollectionRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

DeleteCollectionRequest::~DeleteCollectionRequest() {
  // @@protoc_insertion_point(destructor:proto.collection.DeleteCollectionRequest)
  SharedDtor();
}

void DeleteCollectionRequest::SharedDtor() {
}

void DeleteCollectionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCollectionRequest& DeleteCollectionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCollectionRequest_collection_2eproto.base);
  return *internal_default_instance();
}


void DeleteCollectionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.collection.DeleteCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* DeleteCollectionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCollectionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.collection.DeleteCollectionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.collection.DeleteCollectionRequest)
  return target;
}

size_t DeleteCollectionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.collection.DeleteCollectionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCollectionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.collection.DeleteCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCollectionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCollectionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.collection.DeleteCollectionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.collection.DeleteCollectionRequest)
    MergeFrom(*source);
  }
}

void DeleteCollectionRequest::MergeFrom(const DeleteCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.collection.DeleteCollectionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteCollectionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.collection.DeleteCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCollectionRequest::CopyFrom(const DeleteCollectionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.collection.DeleteCollectionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCollectionRequest::IsInitialized() const {
  return true;
}

void DeleteCollectionRequest::InternalSwap(DeleteCollectionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCollectionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace collection
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::collection::Collection* Arena::CreateMaybeMessage< ::proto::collection::Collection >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::Collection >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::ListCollectionsRequest* Arena::CreateMaybeMessage< ::proto::collection::ListCollectionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::ListCollectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::ListCollectionsResponse* Arena::CreateMaybeMessage< ::proto::collection::ListCollectionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::ListCollectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::GetCollectionRequest* Arena::CreateMaybeMessage< ::proto::collection::GetCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::GetCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::CreateCollectionRequest* Arena::CreateMaybeMessage< ::proto::collection::CreateCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::CreateCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::UpdateCollectionRequest* Arena::CreateMaybeMessage< ::proto::collection::UpdateCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::UpdateCollectionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::collection::DeleteCollectionRequest* Arena::CreateMaybeMessage< ::proto::collection::DeleteCollectionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::collection::DeleteCollectionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
